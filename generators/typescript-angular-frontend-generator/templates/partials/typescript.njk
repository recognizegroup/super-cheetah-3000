{% macro dataType(type, required = false) -%}
  {% if type == 'string' or type == 'text' -%}
    string
  {%- elif type == 'integer' -%}
    number
  {%- elif type == 'boolean' -%}
    boolean
  {%- else -%}
    {{ type.target.name | pascalCase }}
  {%- endif -%}{% if not required %} | undefined{% endif %}
{%- endmacro %}

{% macro relatedImports(entity) -%}
  {% for field in entity.fields -%}
    {%- if field.type.target -%}
      import { {{ field.type.target.name | pascalCase }} } from './{{ field.type.target.name | kebabCase }}'
    {% endif -%}
  {%- endfor -%}
{%- endmacro %}

{% macro defaultValue(type, required = false) -%}
  {%- if not required -%}
    null
  {%- elif type == 'string' or type == 'text' -%}
    ''
  {%- elif type == 'integer' -%}
    0
  {%- elif type == 'boolean' -%}
    false
  {%- else -%}
    null
  {%- endif -%}
{%- endmacro %}

{% macro fieldAccess(entity, field, variable = null) -%}
  {% if not field.type.target -%}
    {% if variable != null %}{{ variable }}.{% endif %}{{ field.name | camelCase }}
  {%- elif field.type.parity == 'manyToOne' or field.type.parity == 'oneToOne' -%}
    {% if variable != null %}{{ variable }}.{% endif %}{{ field.name | camelCase }}?.{{ (field.type.target | mainProperty).name | camelCase }}
  {%- elif field.type.parity == 'oneToMany' or field.type.parity == 'manyToMany' -%}
    {% if variable != null %}{{ variable }}.{% endif %}{{ field.name | camelCase }}?.length items
  {%- endif -%}
{%- endmacro %}
