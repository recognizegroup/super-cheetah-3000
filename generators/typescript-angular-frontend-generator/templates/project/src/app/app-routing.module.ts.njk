import { NgModule, inject } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { BrowserUtils } from '@azure/msal-browser';
import { AuthenticationLayoutComponent } from './components/authentication-layout/authentication-layout.component';
import { LayoutComponent } from './components/layout/layout.component';
import { LoginComponent } from './pages/login/login.component';
import { RedirectComponent } from './pages/redirect/redirect.component';
import { UnauthenticatedGuard } from './guards/unauthenticated.guard';
import { AuthenticatedGuard } from './guards/authenticated.guard';
import { DashboardComponent } from './pages/dashboard/dashboard.component';
{% incremental id="route-import", lang="ts" %}
{% if entity.operations.read.enabled %}
import { {{ entity.name | plural | pascalCase }}Component } from './pages/{{ entity.name | plural | kebabCase }}/{{ entity.name | plural | kebabCase }}.component';
{% endif %}
{% if entity.operations.create.enabled or entity.operations.update.enabled %}
import { {{ entity.name | pascalCase }}EditComponent } from './pages/{{ entity.name | kebabCase }}-edit/{{ entity.name | kebabCase }}-edit.component';
{% endif %}
import { {{ entity.name | pascalCase }}Resolver } from './resolvers/{{ entity.name | kebabCase }}.resolver';
{% endincremental %}

const routes: Routes = [
  {
    component: AuthenticationLayoutComponent,
    path: 'auth',
    children: [
      { path: '', redirectTo: 'login', pathMatch: 'full' },
      { path: 'login', component: LoginComponent, canActivate: [() => inject(UnauthenticatedGuard).canActivate()] },
      { path: 'redirect', component: RedirectComponent, canActivate: [() => inject(UnauthenticatedGuard).canActivate()] },
    ]
  },
  {
    component: LayoutComponent,
    canActivate: [() => inject(AuthenticatedGuard).canActivate()],
    path: '',
    children: [
      { path: '', pathMatch: 'full', redirectTo: 'dashboard' },
      { path: 'dashboard', component: DashboardComponent },
      {% incremental id="route-declaration", lang="ts" %}
      {% if entity.operations.update.enabled %}
      { path: '{{ entity.name | plural | urlCase }}', component: {{ entity.name | plural | pascalCase }}Component },
      {% endif %}
      {% if entity.operations.create.enabled %}
      { path: '{{ entity.name | plural | urlCase }}/create', component: {{ entity.name | pascalCase }}EditComponent },
      {% endif %}
      {% if entity.operations.update.enabled %}
      { path: '{{ entity.name | plural | urlCase }}/:id/edit', component: {{ entity.name | pascalCase }}EditComponent, resolve: { entity: {{ entity.name | pascalCase }}Resolver }  },
      {% endif %}
      {% endincremental %}
    ]
  }
];

@NgModule({
  imports: [RouterModule.forRoot(routes, {
    initialNavigation: !BrowserUtils.isInIframe() && !BrowserUtils.isInPopup() ? 'enabledNonBlocking' : 'disabled' // Set to enabledBlocking to use Angular Universal
  })],
  exports: [RouterModule]
})
export class AppRoutingModule { }
