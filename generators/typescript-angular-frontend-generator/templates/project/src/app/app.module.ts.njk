import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { InlineSVGModule } from "ng-inline-svg-2";
import { VwuiAngularModule } from '@recognizebv/vwui-angular';
import { LayoutComponent } from './components/layout/layout.component';
import { AuthenticationLayoutComponent } from './components/authentication-layout/authentication-layout.component';
import { LoginComponent } from './pages/login/login.component';
import { RedirectComponent } from './pages/redirect/redirect.component';
import { DashboardComponent } from './pages/dashboard/dashboard.component';
import { HasSecurityRolesDirective } from './directives/has-security-role.directive';
import {BrowserCacheLocation, InteractionType, PublicClientApplication} from '@azure/msal-browser';
import {
  MsalBroadcastService,
  MsalGuard,
  MsalInterceptor,
  MsalModule,
  MsalRedirectComponent,
  MsalService
} from "@azure/msal-angular";
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { environment } from 'src/environments/environment';
import { MenuComponent } from './components/menu/menu.component';
import { SortableFieldComponent } from './components/sortable-field/sortable-field.component';
import { DeleteConfirmationModalComponent } from './components/delete-confirmation-modal/delete-confirmation-modal.component';
import { InputMultiSelectComponent } from './components/input-multi-select/input-multi-select.component';
import { PaginationComponent } from './components/pagination/pagination.component';
import { HttpClientModule } from '@angular/common/http';
import { NgSelectModule } from '@ng-select/ng-select';
import { ReactiveFormsModule } from '@angular/forms';
import { LoadingBarRouterModule } from '@ngx-loading-bar/router';
import { LoadingBarModule } from "@ngx-loading-bar/core";
{% incremental id="module-import", lang="ts" %}
import { {{ entity.name | plural | pascalCase }}Component } from './pages/{{ entity.name | plural | kebabCase }}/{{ entity.name | plural | kebabCase }}.component';
import { {{ entity.name | pascalCase }}EditComponent } from './pages/{{ entity.name | kebabCase }}-edit/{{ entity.name | kebabCase }}-edit.component';
import { {{ entity.name | pascalCase }}ItemSelectComponent } from './components/{{ entity.name | kebabCase }}-item-select/{{ entity.name | kebabCase }}-item-select.component';
{% endincremental %}

@NgModule({
  declarations: [
    AppComponent,
    LayoutComponent,
    AuthenticationLayoutComponent,
    LoginComponent,
    DeleteConfirmationModalComponent,
    InputMultiSelectComponent,
    RedirectComponent,
    SortableFieldComponent,
    PaginationComponent,
    DashboardComponent,
    HasSecurityRolesDirective,
    MenuComponent,
    {% incremental id="module-declarations", lang="ts" %}
    {{ entity.name | plural | pascalCase }}Component,
    {{ entity.name | pascalCase }}EditComponent,
    {{ entity.name | pascalCase }}ItemSelectComponent,
    {% endincremental %}
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    HttpClientModule,
    ReactiveFormsModule,
    NgSelectModule,
    LoadingBarRouterModule,
    LoadingBarModule,
    InlineSVGModule.forRoot(),
    VwuiAngularModule.forRoot({
      toastPosition: 'top-end',
    }),
    {% if security.identityProvider.type == 'azure-ad' -%}
    MsalModule.forRoot(
      new PublicClientApplication(
        { // MSAL Configuration
          auth: {
            clientId: environment.auth.clientId,
            authority: environment.auth.tenantId,
            redirectUri: environment.auth.redirectUri,
            navigateToLoginRequestUrl: true,
          },
          cache: {
            cacheLocation : BrowserCacheLocation.LocalStorage,
            storeAuthStateInCookie: false,
          },
          system: {
            loggerOptions: {
              piiLoggingEnabled: false
            }
          }
        }
      ),
      {
        interactionType: InteractionType.Redirect, // MSAL Guard Configuration
        authRequest: {
          scopes: [`${environment.auth.clientId}/.default`]
        }
      },
      {
        interactionType: InteractionType.Redirect, // MSAL Interceptor Configuration,
        protectedResourceMap: new Map([
          [`${environment.backend}/*`, [`${environment.auth.clientId}/.default`]],
        ])
      }
    ),
    {%- endif %}
  ],
  providers: [
    {% if security.identityProvider.type == 'azure-ad' -%}
    {
      provide: HTTP_INTERCEPTORS,
      useClass: MsalInterceptor,
      multi: true
    },
    MsalService,
    MsalGuard,
    MsalBroadcastService,
    {%- endif %}
  ],
  bootstrap: [AppComponent, MsalRedirectComponent]
})
export class AppModule { }
